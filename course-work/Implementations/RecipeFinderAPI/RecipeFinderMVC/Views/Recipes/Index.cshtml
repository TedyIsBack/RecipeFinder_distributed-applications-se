@using RecipeFinderAPI.Common
@model RecipeFinderMVC.VIewModels.Recipes.IndexRecipesVM

@{
	ViewData["Title"] = "Recipes";
}

<div class="container mt-4">
	<h2 class="mb-4">Recipes</h2>

	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alert alert-danger">@TempData["ErrorMessage"]</div>
	}

	<form action="/Recipes/Index" method="get" class="row g-3 align-items-center mb-4">
		@foreach (var key in ViewContext.HttpContext.Request.Query.Keys)
		{
			if (key != "Name" && key != "isVegan" && key != "isVegetarian" && key != "Pager.Page")
			{
				<input type="hidden" name="@key" value="@ViewContext.HttpContext.Request.Query[key]" />
			}
		}

		<div class="col-md-4">
			<input type="text" name="Name" value="@Model.Name" class="form-control" placeholder="Name" />
		</div>

		<div class="col-md-4">
			<select name="isVegan" class="form-select">
				<option value="">Select Vegan Status</option>
				<option value="true" @(Model.isVegan == true ? "selected" : "")>Vegan</option>
				<option value="false" @(Model.isVegan == false ? "selected" : "")>Not Vegan</option>
			</select>
		</div>

		<div class="col-md-4">
			<select name="isVegetarian" class="form-select">
				<option value="">Select Vegetarian Status</option>
				<option value="true" @(Model.isVegetarian == true ? "selected" : "")>Vegetarian</option>
				<option value="false" @(Model.isVegetarian == false ? "selected" : "")>Not Vegetarian</option>
			</select>
		</div>

		<div class="col-md-4 d-flex justify-content-end gap-2">
			<a href="/Recipes/Index" class="btn btn-secondary">Clear</a>
			<input type="submit" value="Filter" class="btn btn-primary" />
		</div>
	</form>

	<div class="mb-3">
		<a href="/Recipes/Create" class="btn btn-success">Create New Recipe</a>
	</div>

	@if (Model.Items != null && Model.Items.Any())
	{
		<div class="row row-cols-1 g-4">
			@foreach (var item in Model.Items)
			{
				<div class="col">
					<div class="card shadow-sm p-3">
						<div class="row g-3 align-items-center">
							<div class="col-md-3 text-center">
								@if (!string.IsNullOrEmpty(item.ImgUrl))
								{
									<img src="@item.ImgUrl" alt="@item.Name" class="img-fluid rounded" style="max-height: 120px;" />
								}
								else
								{
									<span class="text-muted">No image</span>
								}
							</div>
							<div class="col-md-7">
								<h5 class="card-title">@item.Name</h5>
								<p class="card-text"><strong>Description:</strong> @item.Description</p>
								<p class="card-text"><strong>Category:</strong> @item.Category?.Name ?? "N/A"</p>
								<p class="card-text"><strong>Preparation Time:</strong> @item.PreparationTime min</p>
							</div>
							<div class="col-md-2 text-end">
								<a href="/Recipes/Edit?id=@item.Id" class="btn btn-sm btn-outline-primary w-100 mb-2">Edit</a>
								<a href="/Recipes/Delete?id=@item.Id" class="btn btn-sm btn-outline-danger w-100">Delete</a>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	}
	else
	{
		<div class="alert alert-warning text-center">
			No recipes found.
		</div>
	}

	<div class="d-flex justify-content-center mt-4">
		@Html.Partial("/Views/Shared/PagerPartial.cshtml", Model.Pager)
	</div>
</div>
